{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useContext } from \"react\";\nimport { AppContext } from \"../utils/context\";\nimport { fakeFetch } from \"../utils/fetch\";\nimport { useWrappedRequest } from \"./useWrappedRequest\";\nexport function useCustomFetch() {\n  _s();\n  const {\n    cache\n  } = useContext(AppContext);\n  const {\n    loading,\n    wrappedRequest\n  } = useWrappedRequest();\n  const fetchWithCache = useCallback(async (endpoint, params) => wrappedRequest(async () => {\n    const cacheKey = getCacheKey(endpoint, params);\n    const cacheResponse = cache === null || cache === void 0 ? void 0 : cache.current.get(cacheKey);\n    if (cacheResponse) {\n      const data = JSON.parse(cacheResponse);\n      return data;\n    }\n    const result = await fakeFetch(endpoint, params);\n    cache === null || cache === void 0 ? void 0 : cache.current.set(cacheKey, JSON.stringify(result));\n    return result;\n  }), [cache, wrappedRequest]);\n  const fetchWithoutCache = useCallback(async (endpoint, params) => wrappedRequest(async () => {\n    const result = await fakeFetch(endpoint, params);\n    return result;\n  }), [wrappedRequest]);\n  const clearCache = useCallback(() => {\n    if ((cache === null || cache === void 0 ? void 0 : cache.current) === undefined) {\n      return;\n    }\n    cache.current = new Map();\n  }, [cache]);\n  const clearCacheByEndpoint = useCallback(endpointsToClear => {\n    if ((cache === null || cache === void 0 ? void 0 : cache.current) === undefined) {\n      return;\n    }\n    const cacheKeys = Array.from(cache.current.keys());\n    for (const key of cacheKeys) {\n      const clearKey = endpointsToClear.some(endpoint => key.startsWith(endpoint));\n      if (clearKey) {\n        cache.current.delete(key);\n      }\n    }\n  }, [cache]);\n  return {\n    fetchWithCache,\n    fetchWithoutCache,\n    clearCache,\n    clearCacheByEndpoint,\n    loading\n  };\n}\n_s(useCustomFetch, \"j/MJvgyGdTYdw5q/fTHvRz37Zrc=\", false, function () {\n  return [useWrappedRequest];\n});\nfunction getCacheKey(endpoint, params) {\n  return `${endpoint}${params ? `@${JSON.stringify(params)}` : \"\"}`;\n}","map":{"version":3,"names":["useCallback","useContext","AppContext","fakeFetch","useWrappedRequest","useCustomFetch","_s","cache","loading","wrappedRequest","fetchWithCache","endpoint","params","cacheKey","getCacheKey","cacheResponse","current","get","data","JSON","parse","result","set","stringify","fetchWithoutCache","clearCache","undefined","Map","clearCacheByEndpoint","endpointsToClear","cacheKeys","Array","from","keys","key","clearKey","some","startsWith","delete"],"sources":["C:/Users/Avinash Ratnam/Documents/Ramp Internship Code/ramp-internship-code/src/hooks/useCustomFetch.ts"],"sourcesContent":["import { useCallback, useContext } from \"react\"\r\nimport { AppContext } from \"../utils/context\"\r\nimport { fakeFetch, RegisteredEndpoints } from \"../utils/fetch\"\r\nimport { useWrappedRequest } from \"./useWrappedRequest\"\r\n\r\nexport function useCustomFetch() {\r\n  const { cache } = useContext(AppContext)\r\n  const { loading, wrappedRequest } = useWrappedRequest()\r\n\r\n  const fetchWithCache = useCallback(\r\n    async <TData, TParams extends object = object>(\r\n      endpoint: RegisteredEndpoints,\r\n      params?: TParams\r\n    ): Promise<TData | null> =>\r\n      wrappedRequest<TData>(async () => {\r\n        const cacheKey = getCacheKey(endpoint, params)\r\n        const cacheResponse = cache?.current.get(cacheKey)\r\n\r\n        if (cacheResponse) {\r\n          const data = JSON.parse(cacheResponse)\r\n          return data as Promise<TData>\r\n        }\r\n\r\n        const result = await fakeFetch<TData>(endpoint, params)\r\n        cache?.current.set(cacheKey, JSON.stringify(result))\r\n        return result\r\n      }),\r\n    [cache, wrappedRequest]\r\n  )\r\n\r\n  const fetchWithoutCache = useCallback(\r\n    async <TData, TParams extends object = object>(\r\n      endpoint: RegisteredEndpoints,\r\n      params?: TParams\r\n    ): Promise<TData | null> =>\r\n      wrappedRequest<TData>(async () => {\r\n        const result = await fakeFetch<TData>(endpoint, params)\r\n        return result\r\n      }),\r\n    [wrappedRequest]\r\n  )\r\n\r\n  const clearCache = useCallback(() => {\r\n    if (cache?.current === undefined) {\r\n      return\r\n    }\r\n\r\n    cache.current = new Map<string, string>()\r\n  }, [cache])\r\n\r\n  const clearCacheByEndpoint = useCallback(\r\n    (endpointsToClear: RegisteredEndpoints[]) => {\r\n      if (cache?.current === undefined) {\r\n        return\r\n      }\r\n\r\n      const cacheKeys = Array.from(cache.current.keys())\r\n\r\n      for (const key of cacheKeys) {\r\n        const clearKey = endpointsToClear.some((endpoint) => key.startsWith(endpoint))\r\n\r\n        if (clearKey) {\r\n          cache.current.delete(key)\r\n        }\r\n      }\r\n    },\r\n    [cache]\r\n  )\r\n\r\n  return { fetchWithCache, fetchWithoutCache, clearCache, clearCacheByEndpoint, loading }\r\n}\r\n\r\nfunction getCacheKey(endpoint: RegisteredEndpoints, params?: object) {\r\n  return `${endpoint}${params ? `@${JSON.stringify(params)}` : \"\"}`\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}